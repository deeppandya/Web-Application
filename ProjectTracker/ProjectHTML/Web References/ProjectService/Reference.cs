//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace ProjectHTML.ProjectService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProjecttrackerSoap", Namespace="http://tempuri.org/")]
    public partial class Projecttracker : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSearchResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProject_Type_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBillingDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditBillingDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillingDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportDSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Projecttracker() {
            this.Url = global::ProjectHTML.Properties.Settings.Default.ProjectHTML_ProjectService_Projecttracker;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event AddProjectCompletedEventHandler AddProjectCompleted;
        
        /// <remarks/>
        public event UpdateProjectCompletedEventHandler UpdateProjectCompleted;
        
        /// <remarks/>
        public event GetProjectsCompletedEventHandler GetProjectsCompleted;
        
        /// <remarks/>
        public event GetProjectDetailCompletedEventHandler GetProjectDetailCompleted;
        
        /// <remarks/>
        public event GetSearchResultCompletedEventHandler GetSearchResultCompleted;
        
        /// <remarks/>
        public event GetProject_Type_IdCompletedEventHandler GetProject_Type_IdCompleted;
        
        /// <remarks/>
        public event CheckUserCompletedEventHandler CheckUserCompleted;
        
        /// <remarks/>
        public event AddCompanyCompletedEventHandler AddCompanyCompleted;
        
        /// <remarks/>
        public event EditCompanyCompletedEventHandler EditCompanyCompleted;
        
        /// <remarks/>
        public event GetCompanyCompletedEventHandler GetCompanyCompleted;
        
        /// <remarks/>
        public event AddClientCompletedEventHandler AddClientCompleted;
        
        /// <remarks/>
        public event EditClientCompletedEventHandler EditClientCompleted;
        
        /// <remarks/>
        public event GetClientCompletedEventHandler GetClientCompleted;
        
        /// <remarks/>
        public event AddBillingDetailsCompletedEventHandler AddBillingDetailsCompleted;
        
        /// <remarks/>
        public event EditBillingDetailsCompletedEventHandler EditBillingDetailsCompleted;
        
        /// <remarks/>
        public event GetBillingDetailsCompletedEventHandler GetBillingDetailsCompleted;
        
        /// <remarks/>
        public event GetCompanyClientsCompletedEventHandler GetCompanyClientsCompleted;
        
        /// <remarks/>
        public event GetReportDSCompletedEventHandler GetReportDSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterUser(string UserId, string password, string fname, string lname, string aabv) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        UserId,
                        password,
                        fname,
                        lname,
                        aabv});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string UserId, string password, string fname, string lname, string aabv) {
            this.RegisterUserAsync(UserId, password, fname, lname, aabv, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string UserId, string password, string fname, string lname, string aabv, object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        UserId,
                        password,
                        fname,
                        lname,
                        aabv}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddProject(string company_id, string clientId, string Bugid, string Project_type_id, string bugdesc, string start_st, string end_dt, string user_id, string action_taken, string contact_person) {
            object[] results = this.Invoke("AddProject", new object[] {
                        company_id,
                        clientId,
                        Bugid,
                        Project_type_id,
                        bugdesc,
                        start_st,
                        end_dt,
                        user_id,
                        action_taken,
                        contact_person});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddProjectAsync(string company_id, string clientId, string Bugid, string Project_type_id, string bugdesc, string start_st, string end_dt, string user_id, string action_taken, string contact_person) {
            this.AddProjectAsync(company_id, clientId, Bugid, Project_type_id, bugdesc, start_st, end_dt, user_id, action_taken, contact_person, null);
        }
        
        /// <remarks/>
        public void AddProjectAsync(string company_id, string clientId, string Bugid, string Project_type_id, string bugdesc, string start_st, string end_dt, string user_id, string action_taken, string contact_person, object userState) {
            if ((this.AddProjectOperationCompleted == null)) {
                this.AddProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProjectOperationCompleted);
            }
            this.InvokeAsync("AddProject", new object[] {
                        company_id,
                        clientId,
                        Bugid,
                        Project_type_id,
                        bugdesc,
                        start_st,
                        end_dt,
                        user_id,
                        action_taken,
                        contact_person}, this.AddProjectOperationCompleted, userState);
        }
        
        private void OnAddProjectOperationCompleted(object arg) {
            if ((this.AddProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProjectCompleted(this, new AddProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProject(string company_id, string clientID, string Bugid, string Project_type_id, string bugdesc, string start_st, string end_dt, string action_taken, string contact_person, string sessionId) {
            object[] results = this.Invoke("UpdateProject", new object[] {
                        company_id,
                        clientID,
                        Bugid,
                        Project_type_id,
                        bugdesc,
                        start_st,
                        end_dt,
                        action_taken,
                        contact_person,
                        sessionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(string company_id, string clientID, string Bugid, string Project_type_id, string bugdesc, string start_st, string end_dt, string action_taken, string contact_person, string sessionId) {
            this.UpdateProjectAsync(company_id, clientID, Bugid, Project_type_id, bugdesc, start_st, end_dt, action_taken, contact_person, sessionId, null);
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(string company_id, string clientID, string Bugid, string Project_type_id, string bugdesc, string start_st, string end_dt, string action_taken, string contact_person, string sessionId, object userState) {
            if ((this.UpdateProjectOperationCompleted == null)) {
                this.UpdateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProjectOperationCompleted);
            }
            this.InvokeAsync("UpdateProject", new object[] {
                        company_id,
                        clientID,
                        Bugid,
                        Project_type_id,
                        bugdesc,
                        start_st,
                        end_dt,
                        action_taken,
                        contact_person,
                        sessionId}, this.UpdateProjectOperationCompleted, userState);
        }
        
        private void OnUpdateProjectOperationCompleted(object arg) {
            if ((this.UpdateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProjectCompleted(this, new UpdateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjects", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjects(string user_id) {
            object[] results = this.Invoke("GetProjects", new object[] {
                        user_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsAsync(string user_id) {
            this.GetProjectsAsync(user_id, null);
        }
        
        /// <remarks/>
        public void GetProjectsAsync(string user_id, object userState) {
            if ((this.GetProjectsOperationCompleted == null)) {
                this.GetProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsOperationCompleted);
            }
            this.InvokeAsync("GetProjects", new object[] {
                        user_id}, this.GetProjectsOperationCompleted, userState);
        }
        
        private void OnGetProjectsOperationCompleted(object arg) {
            if ((this.GetProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsCompleted(this, new GetProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectDetail(string bug_id) {
            object[] results = this.Invoke("GetProjectDetail", new object[] {
                        bug_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectDetailAsync(string bug_id) {
            this.GetProjectDetailAsync(bug_id, null);
        }
        
        /// <remarks/>
        public void GetProjectDetailAsync(string bug_id, object userState) {
            if ((this.GetProjectDetailOperationCompleted == null)) {
                this.GetProjectDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectDetailOperationCompleted);
            }
            this.InvokeAsync("GetProjectDetail", new object[] {
                        bug_id}, this.GetProjectDetailOperationCompleted, userState);
        }
        
        private void OnGetProjectDetailOperationCompleted(object arg) {
            if ((this.GetProjectDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectDetailCompleted(this, new GetProjectDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSearchResult(string user_id, string fname, string lname, string bug_id) {
            object[] results = this.Invoke("GetSearchResult", new object[] {
                        user_id,
                        fname,
                        lname,
                        bug_id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSearchResultAsync(string user_id, string fname, string lname, string bug_id) {
            this.GetSearchResultAsync(user_id, fname, lname, bug_id, null);
        }
        
        /// <remarks/>
        public void GetSearchResultAsync(string user_id, string fname, string lname, string bug_id, object userState) {
            if ((this.GetSearchResultOperationCompleted == null)) {
                this.GetSearchResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSearchResultOperationCompleted);
            }
            this.InvokeAsync("GetSearchResult", new object[] {
                        user_id,
                        fname,
                        lname,
                        bug_id}, this.GetSearchResultOperationCompleted, userState);
        }
        
        private void OnGetSearchResultOperationCompleted(object arg) {
            if ((this.GetSearchResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSearchResultCompleted(this, new GetSearchResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProject_Type_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProject_Type_Id() {
            object[] results = this.Invoke("GetProject_Type_Id", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProject_Type_IdAsync() {
            this.GetProject_Type_IdAsync(null);
        }
        
        /// <remarks/>
        public void GetProject_Type_IdAsync(object userState) {
            if ((this.GetProject_Type_IdOperationCompleted == null)) {
                this.GetProject_Type_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProject_Type_IdOperationCompleted);
            }
            this.InvokeAsync("GetProject_Type_Id", new object[0], this.GetProject_Type_IdOperationCompleted, userState);
        }
        
        private void OnGetProject_Type_IdOperationCompleted(object arg) {
            if ((this.GetProject_Type_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProject_Type_IdCompleted(this, new GetProject_Type_IdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUser(string UserId, string password) {
            object[] results = this.Invoke("CheckUser", new object[] {
                        UserId,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserAsync(string UserId, string password) {
            this.CheckUserAsync(UserId, password, null);
        }
        
        /// <remarks/>
        public void CheckUserAsync(string UserId, string password, object userState) {
            if ((this.CheckUserOperationCompleted == null)) {
                this.CheckUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserOperationCompleted);
            }
            this.InvokeAsync("CheckUser", new object[] {
                        UserId,
                        password}, this.CheckUserOperationCompleted, userState);
        }
        
        private void OnCheckUserOperationCompleted(object arg) {
            if ((this.CheckUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCompleted(this, new CheckUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCompany(string CompanyId, string Desc, string CompanyNo) {
            object[] results = this.Invoke("AddCompany", new object[] {
                        CompanyId,
                        Desc,
                        CompanyNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCompanyAsync(string CompanyId, string Desc, string CompanyNo) {
            this.AddCompanyAsync(CompanyId, Desc, CompanyNo, null);
        }
        
        /// <remarks/>
        public void AddCompanyAsync(string CompanyId, string Desc, string CompanyNo, object userState) {
            if ((this.AddCompanyOperationCompleted == null)) {
                this.AddCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCompanyOperationCompleted);
            }
            this.InvokeAsync("AddCompany", new object[] {
                        CompanyId,
                        Desc,
                        CompanyNo}, this.AddCompanyOperationCompleted, userState);
        }
        
        private void OnAddCompanyOperationCompleted(object arg) {
            if ((this.AddCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompanyCompleted(this, new AddCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditCompany(string CompanyId, string Desc, string companyNo) {
            object[] results = this.Invoke("EditCompany", new object[] {
                        CompanyId,
                        Desc,
                        companyNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditCompanyAsync(string CompanyId, string Desc, string companyNo) {
            this.EditCompanyAsync(CompanyId, Desc, companyNo, null);
        }
        
        /// <remarks/>
        public void EditCompanyAsync(string CompanyId, string Desc, string companyNo, object userState) {
            if ((this.EditCompanyOperationCompleted == null)) {
                this.EditCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCompanyOperationCompleted);
            }
            this.InvokeAsync("EditCompany", new object[] {
                        CompanyId,
                        Desc,
                        companyNo}, this.EditCompanyOperationCompleted, userState);
        }
        
        private void OnEditCompanyOperationCompleted(object arg) {
            if ((this.EditCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCompanyCompleted(this, new EditCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompany(string companyId) {
            object[] results = this.Invoke("GetCompany", new object[] {
                        companyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyAsync(string companyId) {
            this.GetCompanyAsync(companyId, null);
        }
        
        /// <remarks/>
        public void GetCompanyAsync(string companyId, object userState) {
            if ((this.GetCompanyOperationCompleted == null)) {
                this.GetCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyOperationCompleted);
            }
            this.InvokeAsync("GetCompany", new object[] {
                        companyId}, this.GetCompanyOperationCompleted, userState);
        }
        
        private void OnGetCompanyOperationCompleted(object arg) {
            if ((this.GetCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyCompleted(this, new GetCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddClient(string ClientId, string ClientName, double Charge, string billingId, string companyId) {
            object[] results = this.Invoke("AddClient", new object[] {
                        ClientId,
                        ClientName,
                        Charge,
                        billingId,
                        companyId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddClientAsync(string ClientId, string ClientName, double Charge, string billingId, string companyId) {
            this.AddClientAsync(ClientId, ClientName, Charge, billingId, companyId, null);
        }
        
        /// <remarks/>
        public void AddClientAsync(string ClientId, string ClientName, double Charge, string billingId, string companyId, object userState) {
            if ((this.AddClientOperationCompleted == null)) {
                this.AddClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientOperationCompleted);
            }
            this.InvokeAsync("AddClient", new object[] {
                        ClientId,
                        ClientName,
                        Charge,
                        billingId,
                        companyId}, this.AddClientOperationCompleted, userState);
        }
        
        private void OnAddClientOperationCompleted(object arg) {
            if ((this.AddClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientCompleted(this, new AddClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditClient(string ClientId, string ClientName, double Charge, string billingId, string companyId) {
            object[] results = this.Invoke("EditClient", new object[] {
                        ClientId,
                        ClientName,
                        Charge,
                        billingId,
                        companyId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditClientAsync(string ClientId, string ClientName, double Charge, string billingId, string companyId) {
            this.EditClientAsync(ClientId, ClientName, Charge, billingId, companyId, null);
        }
        
        /// <remarks/>
        public void EditClientAsync(string ClientId, string ClientName, double Charge, string billingId, string companyId, object userState) {
            if ((this.EditClientOperationCompleted == null)) {
                this.EditClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditClientOperationCompleted);
            }
            this.InvokeAsync("EditClient", new object[] {
                        ClientId,
                        ClientName,
                        Charge,
                        billingId,
                        companyId}, this.EditClientOperationCompleted, userState);
        }
        
        private void OnEditClientOperationCompleted(object arg) {
            if ((this.EditClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditClientCompleted(this, new EditClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClient(string clientId) {
            object[] results = this.Invoke("GetClient", new object[] {
                        clientId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientAsync(string clientId) {
            this.GetClientAsync(clientId, null);
        }
        
        /// <remarks/>
        public void GetClientAsync(string clientId, object userState) {
            if ((this.GetClientOperationCompleted == null)) {
                this.GetClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientOperationCompleted);
            }
            this.InvokeAsync("GetClient", new object[] {
                        clientId}, this.GetClientOperationCompleted, userState);
        }
        
        private void OnGetClientOperationCompleted(object arg) {
            if ((this.GetClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientCompleted(this, new GetClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddBillingDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddBillingDetails(string BillingId, string BillTo, string ContactPerson, string address, string city, string state, string country, string zip) {
            object[] results = this.Invoke("AddBillingDetails", new object[] {
                        BillingId,
                        BillTo,
                        ContactPerson,
                        address,
                        city,
                        state,
                        country,
                        zip});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddBillingDetailsAsync(string BillingId, string BillTo, string ContactPerson, string address, string city, string state, string country, string zip) {
            this.AddBillingDetailsAsync(BillingId, BillTo, ContactPerson, address, city, state, country, zip, null);
        }
        
        /// <remarks/>
        public void AddBillingDetailsAsync(string BillingId, string BillTo, string ContactPerson, string address, string city, string state, string country, string zip, object userState) {
            if ((this.AddBillingDetailsOperationCompleted == null)) {
                this.AddBillingDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBillingDetailsOperationCompleted);
            }
            this.InvokeAsync("AddBillingDetails", new object[] {
                        BillingId,
                        BillTo,
                        ContactPerson,
                        address,
                        city,
                        state,
                        country,
                        zip}, this.AddBillingDetailsOperationCompleted, userState);
        }
        
        private void OnAddBillingDetailsOperationCompleted(object arg) {
            if ((this.AddBillingDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBillingDetailsCompleted(this, new AddBillingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditBillingDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditBillingDetails(string BillingId, string BillTo, string ContactPerson, string address, string city, string state, string country, string zip) {
            object[] results = this.Invoke("EditBillingDetails", new object[] {
                        BillingId,
                        BillTo,
                        ContactPerson,
                        address,
                        city,
                        state,
                        country,
                        zip});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditBillingDetailsAsync(string BillingId, string BillTo, string ContactPerson, string address, string city, string state, string country, string zip) {
            this.EditBillingDetailsAsync(BillingId, BillTo, ContactPerson, address, city, state, country, zip, null);
        }
        
        /// <remarks/>
        public void EditBillingDetailsAsync(string BillingId, string BillTo, string ContactPerson, string address, string city, string state, string country, string zip, object userState) {
            if ((this.EditBillingDetailsOperationCompleted == null)) {
                this.EditBillingDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditBillingDetailsOperationCompleted);
            }
            this.InvokeAsync("EditBillingDetails", new object[] {
                        BillingId,
                        BillTo,
                        ContactPerson,
                        address,
                        city,
                        state,
                        country,
                        zip}, this.EditBillingDetailsOperationCompleted, userState);
        }
        
        private void OnEditBillingDetailsOperationCompleted(object arg) {
            if ((this.EditBillingDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditBillingDetailsCompleted(this, new EditBillingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBillingDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBillingDetails(string billingId) {
            object[] results = this.Invoke("GetBillingDetails", new object[] {
                        billingId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillingDetailsAsync(string billingId) {
            this.GetBillingDetailsAsync(billingId, null);
        }
        
        /// <remarks/>
        public void GetBillingDetailsAsync(string billingId, object userState) {
            if ((this.GetBillingDetailsOperationCompleted == null)) {
                this.GetBillingDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillingDetailsOperationCompleted);
            }
            this.InvokeAsync("GetBillingDetails", new object[] {
                        billingId}, this.GetBillingDetailsOperationCompleted, userState);
        }
        
        private void OnGetBillingDetailsOperationCompleted(object arg) {
            if ((this.GetBillingDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillingDetailsCompleted(this, new GetBillingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyClients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompanyClients(string companyId) {
            object[] results = this.Invoke("GetCompanyClients", new object[] {
                        companyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyClientsAsync(string companyId) {
            this.GetCompanyClientsAsync(companyId, null);
        }
        
        /// <remarks/>
        public void GetCompanyClientsAsync(string companyId, object userState) {
            if ((this.GetCompanyClientsOperationCompleted == null)) {
                this.GetCompanyClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyClientsOperationCompleted);
            }
            this.InvokeAsync("GetCompanyClients", new object[] {
                        companyId}, this.GetCompanyClientsOperationCompleted, userState);
        }
        
        private void OnGetCompanyClientsOperationCompleted(object arg) {
            if ((this.GetCompanyClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyClientsCompleted(this, new GetCompanyClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportDS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetReportDS() {
            object[] results = this.Invoke("GetReportDS", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportDSAsync() {
            this.GetReportDSAsync(null);
        }
        
        /// <remarks/>
        public void GetReportDSAsync(object userState) {
            if ((this.GetReportDSOperationCompleted == null)) {
                this.GetReportDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportDSOperationCompleted);
            }
            this.InvokeAsync("GetReportDS", new object[0], this.GetReportDSOperationCompleted, userState);
        }
        
        private void OnGetReportDSOperationCompleted(object arg) {
            if ((this.GetReportDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportDSCompleted(this, new GetReportDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddProjectCompletedEventHandler(object sender, AddProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UpdateProjectCompletedEventHandler(object sender, UpdateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetProjectsCompletedEventHandler(object sender, GetProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetProjectDetailCompletedEventHandler(object sender, GetProjectDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSearchResultCompletedEventHandler(object sender, GetSearchResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSearchResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSearchResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetProject_Type_IdCompletedEventHandler(object sender, GetProject_Type_IdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProject_Type_IdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProject_Type_IdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CheckUserCompletedEventHandler(object sender, CheckUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddCompanyCompletedEventHandler(object sender, AddCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EditCompanyCompletedEventHandler(object sender, EditCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCompanyCompletedEventHandler(object sender, GetCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddClientCompletedEventHandler(object sender, AddClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EditClientCompletedEventHandler(object sender, EditClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetClientCompletedEventHandler(object sender, GetClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddBillingDetailsCompletedEventHandler(object sender, AddBillingDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBillingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBillingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EditBillingDetailsCompletedEventHandler(object sender, EditBillingDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditBillingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditBillingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetBillingDetailsCompletedEventHandler(object sender, GetBillingDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCompanyClientsCompletedEventHandler(object sender, GetCompanyClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetReportDSCompletedEventHandler(object sender, GetReportDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591